# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-cli

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    environment:
      APP_KEY: base64:RUg0M4sNlhWVLeU59lUgNfDUGpWxLr3vKicMTZe6U9Y=
      APP_ENV: testing
      MYSQL_DATABASE: 'homestead'
      MYSQL_USER: 'homestead'
      MYSQL_PASSWORD: 'secret'
      DB_DATABASE: 'homestead'
      DB_USERNAME: 'homestead'
      DB_PASSWORD: 'secret'
      TZ: Asia/Tokyo
      MYSQL_ALLOW_EMPTY_PASSWORD: true

    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install bcmath pdo_mysql

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "src/composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: cd src && composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "src/composer.json" }}
          paths:
            - src/vendor

      # prepare the database
      - run: cd src && php artisan migrate --env=testing --force

      # run tests with phpunit or codecept
      - run: src/vendor/bin/phpunit
